<UserControl x:Class="RegistrationModule.Views.FileManagerPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RegistrationModule.Views"
             xmlns:Converts="clr-namespace:Common.Converts;assembly=Common"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:model="clr-namespace:Common.Models;assembly=Common"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Converts:StringToBitmapSource x:Key="s2b"/>
            <ToolTip x:Key="FileInfoTip">
                <Grid>
                    <Image Width="320">
                        <Image.Source>
                            <BitmapImage DecodePixelWidth="320" UriSource="{Binding Path=FullPath,Converter={StaticResource s2b}}" />
                            <!--<BitmapImage DecodePixelWidth="320" UriSource="C:\Users\Administrator\Pictures\Saved Pictures\001.jpg" />-->
                        </Image.Source>
                    </Image>
                    <TextBlock Text="{Binding Path=Name}"/>
                </Grid>
            </ToolTip>
            
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}"
                                                 x:Name="SnackbarThree" />
        <!-- Left -->
        <TreeView Width="250" Padding="0" Margin="0" BorderThickness="1" Grid.Column="0" HorizontalAlignment="Left"
                  ItemsSource="{Binding TreeList}"
                  SelectedItemChanged="TreeView_SelectedItemChanged">
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectTreeNodeCommand}"
                                           CommandParameter="{Binding ElementName=TreeList}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type model:TreeNode}" ItemsSource="{Binding Path=Children}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Name}"/>
                        <StackPanel.ToolTip>
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" TextWrapping="Wrap"/>
                        </StackPanel.ToolTip>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <!-- Left End -->

        <!-- Right -->
        <Grid Grid.Column="1" Margin="5 0 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Content="附件上传" Command="{Binding FileUpLoadCommand}"/>

            <DataGrid Grid.Row="1" Margin="0" Name="FileInfoList"
                  ItemsSource="{Binding FileInfoList}"
                  CanUserSortColumns="True"
                  CanUserAddRows="False" AutoGenerateColumns="False" >
                <DataGrid.Columns>
                    <!--<DataGridTemplateColumn  Header="预览" 
                                        MinWidth="50" Width="150" >
                        <DataGridTemplateColumn.CellTemplate>
                            
                            <DataTemplate>
                                <TextBlock Text="预览" Width="150" ToolTipService.ToolTip="{Binding Source={StaticResource FileInfoTip}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->
                    <DataGridTextColumn Binding="{Binding ID}" Header="附件编码" IsReadOnly="True" 
                                        MinWidth="50" Width="150"  />
                    <DataGridTextColumn Binding="{Binding Name}" Header="附件名称" IsReadOnly="True" 
                                        MinWidth="50" Width="150"  />
                    <DataGridTextColumn Binding="{Binding Extension}" Header="附件扩展名" IsReadOnly="True" 
                                        MinWidth="50"/>
                    <DataGridTextColumn Binding="{Binding Path}" Header="相对路径" Width="150" IsReadOnly="True" 
                                        MinWidth="50"/>
                    <DataGridTextColumn Binding="{Binding UpdateTime, StringFormat='yyyy-MM-dd HH:mm:ss'}" IsReadOnly="True" 
                                        MinWidth="50" Header="更新时间" />
                    <DataGridTemplateColumn Header="操作" MinWidth="50">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{DynamicResource MaterialDesignToolForegroundButton}"
                                        Command="{Binding Path=DataContext.DelFileCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding ElementName=FileInfoList}"
                                        ToolTip="删除附件" Foreground="Red" Margin="5 -5">
                                    <materialDesign:PackIcon Kind="DeleteForeverOutline" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        
        <!-- Right End -->
    </Grid>
</UserControl>
